{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  form: [\n    // { isInput: false,label : \"\", id: 1, value: \"\", options: [1, 2] }\n  ],\n  data: []\n};\nlet formSlice = createSlice({\n  name: \"inviteSlice\",\n  initialState: initialState,\n  reducers: {\n    addInput(state, action) {\n      state.form.push({\n        isInput: true,\n        id: state.form.length,\n        label: action.payload,\n        value: \"\"\n      });\n    },\n    addSelect(state, action) {\n      console.log(action.payload);\n      state.form.push({\n        isInput: false,\n        id: state.form.length,\n        label: action.payload.label,\n        value: \"\",\n        options: action.payload.options\n      });\n    },\n    setInput(state, action) {\n      const {\n        id,\n        value\n      } = action.payload;\n      console.log(id, value, action.payload);\n      const index = state.form.findIndex(item => item.id == id);\n      if (index !== -1) {\n        state.form[index].value = value;\n      }\n    },\n    setSelect(state, action) {\n      const {\n        id,\n        value\n      } = action.payload;\n      const index = state.form.findIndex(item => item.id == id);\n      if (index !== -1) {\n        state.form[index].value = value;\n      }\n    },\n    resetFormValues(state, action) {\n      state.form.forEach(i => i.value = \"\");\n    },\n    addData(state, action) {\n      // [{id, label, value}]\n      state.data.push(action.payload);\n    }\n  }\n});\nexport const formSliceActions = formSlice.actions;\nexport default formSlice;","map":{"version":3,"names":["createSlice","initialState","form","data","formSlice","name","reducers","addInput","state","action","push","isInput","id","length","label","payload","value","addSelect","console","log","options","setInput","index","findIndex","item","setSelect","resetFormValues","forEach","i","addData","formSliceActions","actions"],"sources":["/home/yash/Documents/portfolio/src/store/formSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  form: [\n    // { isInput: false,label : \"\", id: 1, value: \"\", options: [1, 2] }\n  ],\n\n  data: [],\n};\n\nlet formSlice = createSlice({\n  name: \"inviteSlice\",\n  initialState: initialState,\n  reducers: {\n    addInput(state, action) {\n      state.form.push({\n        isInput: true,\n        id: state.form.length,\n        label: action.payload,\n        value: \"\",\n      });\n    },\n    addSelect(state, action) {\n      console.log(action.payload);\n      state.form.push({\n        isInput: false,\n        id: state.form.length,\n        label: action.payload.label,\n\n        value: \"\",\n        options: action.payload.options,\n      });\n    },\n    setInput(state, action) {\n      const { id, value } = action.payload;\n      console.log(id, value, action.payload);\n      const index = state.form.findIndex((item) => item.id == id);\n      if (index !== -1) {\n        state.form[index].value = value;\n      }\n    },\n    setSelect(state, action) {\n      const { id, value } = action.payload;\n      const index = state.form.findIndex((item) => item.id == id);\n      if (index !== -1) {\n        state.form[index].value = value;\n      }\n    },\n\n    resetFormValues(state, action) {\n      state.form.forEach((i) => (i.value = \"\"));\n    },\n\n    addData(state, action) {\n      // [{id, label, value}]\n      state.data.push(action.payload);\n    },\n  },\n});\n\nexport const formSliceActions = formSlice.actions;\n\nexport default formSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE;IACJ;EAAA,CACD;EAEDC,IAAI,EAAE;AACR,CAAC;AAED,IAAIC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAE,aAAa;EACnBJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACRC,QAAQA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACN,IAAI,CAACQ,IAAI,CAAC;QACdC,OAAO,EAAE,IAAI;QACbC,EAAE,EAAEJ,KAAK,CAACN,IAAI,CAACW,MAAM;QACrBC,KAAK,EAAEL,MAAM,CAACM,OAAO;QACrBC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC;IACDC,SAASA,CAACT,KAAK,EAAEC,MAAM,EAAE;MACvBS,OAAO,CAACC,GAAG,CAACV,MAAM,CAACM,OAAO,CAAC;MAC3BP,KAAK,CAACN,IAAI,CAACQ,IAAI,CAAC;QACdC,OAAO,EAAE,KAAK;QACdC,EAAE,EAAEJ,KAAK,CAACN,IAAI,CAACW,MAAM;QACrBC,KAAK,EAAEL,MAAM,CAACM,OAAO,CAACD,KAAK;QAE3BE,KAAK,EAAE,EAAE;QACTI,OAAO,EAAEX,MAAM,CAACM,OAAO,CAACK;MAC1B,CAAC,CAAC;IACJ,CAAC;IACDC,QAAQA,CAACb,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAM;QAAEG,EAAE;QAAEI;MAAM,CAAC,GAAGP,MAAM,CAACM,OAAO;MACpCG,OAAO,CAACC,GAAG,CAACP,EAAE,EAAEI,KAAK,EAAEP,MAAM,CAACM,OAAO,CAAC;MACtC,MAAMO,KAAK,GAAGd,KAAK,CAACN,IAAI,CAACqB,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACZ,EAAE,IAAIA,EAAE,CAAC;MAC3D,IAAIU,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBd,KAAK,CAACN,IAAI,CAACoB,KAAK,CAAC,CAACN,KAAK,GAAGA,KAAK;MACjC;IACF,CAAC;IACDS,SAASA,CAACjB,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAM;QAAEG,EAAE;QAAEI;MAAM,CAAC,GAAGP,MAAM,CAACM,OAAO;MACpC,MAAMO,KAAK,GAAGd,KAAK,CAACN,IAAI,CAACqB,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACZ,EAAE,IAAIA,EAAE,CAAC;MAC3D,IAAIU,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBd,KAAK,CAACN,IAAI,CAACoB,KAAK,CAAC,CAACN,KAAK,GAAGA,KAAK;MACjC;IACF,CAAC;IAEDU,eAAeA,CAAClB,KAAK,EAAEC,MAAM,EAAE;MAC7BD,KAAK,CAACN,IAAI,CAACyB,OAAO,CAAEC,CAAC,IAAMA,CAAC,CAACZ,KAAK,GAAG,EAAG,CAAC;IAC3C,CAAC;IAEDa,OAAOA,CAACrB,KAAK,EAAEC,MAAM,EAAE;MACrB;MACAD,KAAK,CAACL,IAAI,CAACO,IAAI,CAACD,MAAM,CAACM,OAAO,CAAC;IACjC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMe,gBAAgB,GAAG1B,SAAS,CAAC2B,OAAO;AAEjD,eAAe3B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}